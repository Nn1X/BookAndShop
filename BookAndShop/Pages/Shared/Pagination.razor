
<div class="pagination" style="display: inline-block;">

    <a class="page" @onclick="() => SelectedPageInternal(new LinkModel(CurrentPage-1,CurrentPage != 1))">❮❮</a>
    
    @if (CurrentPage >=5)
    {
        <a class="page @(CurrentPage==1 ? "active" : null)" @onclick="() => SelectedPageInternal(new LinkModel(1))">1</a>
        <span class="extra">…</span>
    }
    @foreach (var link in links)
    {
	    <a class="page @(link.Active ? "active" : null)" @onclick="() => SelectedPageInternal(link)">@link.Text</a>
    }
</div>

@code {
    [Parameter] public int CurrentPage { get; set; } = 1;
    [Parameter] public int TotaPagesQuantity { get; set; }
    [Parameter] public int Radius { get; set; } = 3;
    [Parameter] public EventCallback<int> SelectedPage { get; set; }
    List<LinkModel> links;
    protected override void OnParametersSet()
    {
        LoadPages();
    }

    private async Task SelectedPageInternal(LinkModel link)
    {
        if (link.Page == CurrentPage)
        {
            return;
        }

        if (!link.Enabled)
        {
            return;
        }

        CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }

    private void LoadPages()
    {
        links = new List<LinkModel>();
        if(CurrentPage<5)
        {
            links.Add(new LinkModel(1) { Active = CurrentPage == 1 });
        }

        for (int i = 2; i <= TotaPagesQuantity; i++)
        {
            if (i >= CurrentPage - Radius && i <= CurrentPage + Radius)
            {
                links.Add(new LinkModel(i) { Active = CurrentPage == i });
            }
        }

        var isNextPageLinkEnabled = CurrentPage != TotaPagesQuantity;
        var nextPage = CurrentPage + 1;
        links.Add(new LinkModel(nextPage, isNextPageLinkEnabled, "❯❯"));
    }

    class LinkModel
    {
        public LinkModel(int page)
            : this(page, true) { }

        public LinkModel(int page, bool enabled)
            : this(page, enabled, page.ToString())
        { }

        public LinkModel(int page, bool enabled, string text)
        {
            Page = page;
            Enabled = enabled;
            Text = text;
        }

        public string Text { get; set; }
        public int Page { get; set; }
        public bool Enabled { get; set; } = true;
        public bool Active { get; set; } = false;
    }
}
