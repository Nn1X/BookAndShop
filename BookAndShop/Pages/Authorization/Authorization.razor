@page "/authtest"
@using System.ComponentModel.DataAnnotations
@using BookAndShop.Models
@inject MyDbContext context
@inject NavigationManager manager
	
@layout EmptyLayout;

	<div class="limiter">
		<div class="container-login100">
			<div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
				<EditForm Model="@model" class="login100-form validate-form flex-sb flex-w">
					<span class="login100-form-title p-b-32">
						Авторизация
					</span>

					<span class="txt1 p-b-11" style="margin: 0 auto; color:red; display: block;">
						@Error
					</span>

					<span class="txt1 p-b-11">
						Логин
					</span>
					<div class="wrap-input100 validate-input m-b-36" data-validate = "Username is required">
						<InputText style="border:0px!important;" class="input100" type="text" placeholder="" @bind-Value="@model.Login" />
						<span class="focus-input100"></span>
					</div>
					<span class="txt1 p-b-11">
						Пароль
					</span>
					<div class="wrap-input100 validate-input m-b-12" data-validate = "Password is required">
						<span class="btn-show-pass" @onclick="ShowPass">
							<i class="@Eyes"></i>
						</span>
						<InputText style="border:0px!important;" class="input100" type="@PassType" placeholder="" @bind-Value="@model.Password" />
						<span class="focus-input100"></span>
					</div>
					
					<div class="flex-sb-m w-full p-b-48">
						<div class="contact100-form-checkbox"></div>
						<div>
							<a href="#" class="txt3">
								Создать аккаунт?
							</a>
						</div>
					</div>

					<div class="container-login100-form-btn">
						<button type="submit" @onclick="LogIn" class="login100-form-btn">
							Войти
						</button>
					</div>

				</EditForm>
			</div>
		</div>
	</div>
	

	<div id="dropDownSelect1"></div>

@code{
	string Error{ get; set; }
	string PassType { get; set; } = "password";
	string Eyes { get; set; } = "fa fa-eye"; 

	class Auth
	{
		[Required]
		public string Login { get; set; }
		[Required]
		public string Password { get; set; }
	}

	private Auth model = new Auth();

	private void LogIn()
	{
		if(context.Users.Where(x => x.Login == model.Login && x.Password == model.Password).Count()>0)
		{
			manager.NavigateTo("/");
		}
		else
		{
			Error = "Неверный лоигн или пароль!";
		}
	}

	private void ShowPass()
	{
		if(PassType=="text")
		{
			PassType = "password";
			Eyes = "fa fa-eye";
		}
		else
		{
			PassType = "text";
			Eyes = "fa fa-eye-slash";
		}
		StateHasChanged();
	}
}