@page "/sendmessage"
@page "/sendmessage/{userId}"

@using System.Net.Mail
@using System.Net
@using Microsoft.AspNetCore.Components.Authorization
@using BookAndShop.Data
@using BookAndShop.Models

@using Microsoft.AspNetCore.Hosting;
@using Microsoft.Extensions.Hosting;
@inject IWebHostEnvironment Env

@inject NavigationManager Navigation
@inject TokenProvider TokenProvider
@inject BookAndShopContext idContext

<div class="limiter">
	<div class="container-login100">
		<div class="wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55">
                <form id="account" method="post" class="login100-form validate-form flex-sb flex-w" style="text-align: center;">
				<span class="login100-form-title p-b-32" style="font-size: 40px;">
					На Вашу электронную почту было отправлено письмо для подтверждения аккаунта!
				</span>

				<span class="txt1 p-b-11" style="margin-top: 20px; display: block; font-size: 20px;">
					<span>
                    <a href="/">&#x25c1 На главную &#x25b7</a>
                    </span>
				</span>
                </form>
            </div>
        </div>
    </div>


@code{
    [Parameter]
    public string userId{ get; set; }

    private string userMail{ get; set; }

    private  SmtpClient smtp{ get; set; }
    private  MailMessage m{ get; set; }

    protected async override Task OnParametersSetAsync()
    {
        userMail = idContext.Users.Where(x => x.Id == userId).Select(x => x.Email).FirstOrDefault();
        if (userMail != null)
        {
            // отправитель - устанавливаем адрес и отображаемое в письме имя
            MailAddress from = new MailAddress("aryrate@gmail.com", "Book&Shop");
            // кому отправляем
            MailAddress to = new MailAddress(userMail);
            // создаем объект сообщения
            m = new MailMessage(from, to);
            // тема письма
            m.Subject = "Подтверждение аккаунта";
            // текст письма
            m.Body = await GetMassageHtml(userId);
            // письмо представляет код html
            m.IsBodyHtml = true;
            // адрес smtp-сервера и порт, с которого будем отправлять письмо
            smtp = new SmtpClient("smtp.gmail.com", 587);
            // логин и пароль
            smtp.Credentials = new NetworkCredential("aryrate@gmail.com", "787AyT787X2v");
            smtp.EnableSsl = true;  
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (smtp != null && firstRender)
        {
             smtp.SendMailAsync(m);
        }
   
    }

    private async Task<string> GetMassageHtml(string userId)
    {
            string html = "";

            var path = Env.WebRootPath+"\\letter\\MailMessage.html";

            using (StreamReader reader = new StreamReader(path))
            {
                html = await reader.ReadToEndAsync();
            }

            var resultHtml = html.Replace("confirmation_link", $"https://localhost:7044/verification/{userId}");

            return resultHtml;
        }

}